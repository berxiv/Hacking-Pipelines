  ______                    _     _____                                    _   _____                 
 |  ____|                  | |   |  __ \                                  | | |  __ \                
 | |__ ___  _ __ __ _  ___ | |_  | |__) |_ _ ___ _____      _____  _ __ __| | | |__) |_ _  __ _  ___ 
 |  __/ _ \| '__/ _` |/ _ \| __| |  ___/ _` / __/ __\ \ /\ / / _ \| '__/ _` | |  ___/ _` |/ _` |/ _ \
 | | | (_) | | | (_| | (_) | |_  | |  | (_| \__ \__ \\ V  V / (_) | | | (_| | | |  | (_| | (_| |  __/
 |_|  \___/|_|  \__, |\___/ \__| |_|   \__,_|___/___/ \_/\_/ \___/|_|  \__,_| |_|   \__,_|\__, |\___|
                 __/ |                                                                     __/ |     
                |___/                                                                     |___/      



================================================
1. INPUT VALIDATION & INJECTION TESTING
---------------------------------------
[ ] SQL Injection
    - Steps:
        1. In the email/username field, enter payloads like:
            ' OR 1=1--
            test@example.com' UNION SELECT null--
            " OR ""="
        2. Observe response: error messages, delays, or bypass.
    - Look for: SQL errors, account existence leaks, bypass of user check.

[ ] NoSQL Injection
    - Steps:
        1. Use NoSQL payloads:
            {"$ne": null}
            {"$gt": ""}
        2. Monitor for different responses or unintended password reset emails.
    - Look for: Reset emails sent without valid user.

[ ] LDAP Injection
    - Steps:
        1. Test with:
            *)(uid=*)
            admin)(password=*)
        2. Check for server errors or reset link sent.
    - Look for: Any LDAP filter manipulation.

[ ] Command Injection (unlikely but possible if email triggers CLI)
    - Steps:
        1. Enter email like:
            test@example.com; sleep 10
            test@example.com && ping -c 5 attacker.com
        2. Check for time delays or outbound requests.
    - Look for: Command execution.

[ ] HTML Injection / XSS
    - Steps:
        1. Input:
            <script>alert(1)</script>
            <img src=x onerror=alert(1)>
        2. Submit and inspect response pages, error messages, and emails.
    - Look for: Script execution in response or email content.

2. AUTHENTICATION LOGIC ISSUES
------------------------------
[ ] Account Enumeration via Response Messages
    - Steps:
        1. Try valid vs invalid emails.
        2. Observe if message differs: ("We sent a link" vs "User not found").
    - Look for: Different responses that leak account existence.

[ ] Account Enumeration via Timing
    - Steps:
        1. Measure response time for valid vs invalid emails.
    - Look for: Consistent differences in processing time.

[ ] Rate Limiting / Brute Force
    - Steps:
        1. Send multiple forgot password requests rapidly using Burp Intruder.
        2. Test for no throttling.
    - Look for: Infinite requests possible without blocking.

[ ] Password Reset Without Email Confirmation
    - Steps:
        1. Check if reset token is sent via email but also in response.
    - Look for: Token leakage in HTTP response or redirect.

[ ] Use of Weak Reset Tokens
    - Steps:
        1. Capture token from reset email.
        2. Check length, character set, and randomness.
        3. Attempt guessing or enumerating tokens.
    - Look for: Predictable or short tokens.

[ ] Token Reuse
    - Steps:
        1. Use a valid token once.
        2. Try using it again to reset password again.
    - Look for: Token remains valid after first use.

[ ] Token Expiry
    - Steps:
        1. Wait 24â€“48 hours and try token again.
    - Look for: Token still works after intended expiry.

[ ] CSRF in Forgot Password
    - Steps:
        1. Craft HTML form sending POST/GET to forgot password endpoint with victim's email.
        2. Send to victim.
    - Look for: Victim unknowingly triggers password reset email.

3. EMAIL SECURITY ISSUES
------------------------
[ ] Email Content Injection
    - Steps:
        1. Add newline characters (%0a, %0d) in email field.
        2. Attempt to inject extra headers (BCC, CC).
    - Look for: Header injection in outgoing emails.

[ ] Open Redirect in Email Links
    - Steps:
        1. Check if reset link contains redirect= parameter.
        2. Modify to point to attacker site.
    - Look for: Email link sends user to malicious site.

[ ] Link without HTTPS
    - Steps:
        1. Inspect email reset link.
    - Look for: Non-HTTPS link.

[ ] Missing Click Tracking / Audit
    - Steps:
        1. Use same reset link multiple times from different IPs.
    - Look for: No logging or detection of unusual use.

4. BACKEND & BUSINESS LOGIC TESTS
---------------------------------
[ ] Resetting Another User's Password
    - Steps:
        1. Intercept request in Burp.
        2. Change email to another user before sending.
    - Look for: Password reset triggered for other account.

[ ] IDOR (Insecure Direct Object Reference) in Reset
    - Steps:
        1. After getting reset link, check if token is tied to user ID in URL.
        2. Modify to other IDs.
    - Look for: Ability to reset other accounts.

[ ] Multiple Active Tokens
    - Steps:
        1. Request multiple password resets.
        2. Test if all issued tokens remain valid.
    - Look for: Multiple valid tokens at once.

[ ] Weak Secret Questions (if present)
    - Steps:
        1. Try guessing common answers.
    - Look for: Easy bypass.

[ ] Reset Without Old Password Verification
    - Steps:
        1. Complete reset without providing current password.
    - Look for: Missing verification (context-specific).

[ ] HTTP Verb Tampering
    - Steps:
        1. Try sending request as GET/POST/PUT with same parameters.
    - Look for: Method misconfiguration.

[ ] Caching of Sensitive Pages
    - Steps:
        1. View password reset form with token.
        2. Inspect cache-control headers.
    - Look for: Page stored in browser/proxy cache.

[ ] Insecure Transport
    - Steps:
        1. Intercept traffic with Burp.
    - Look for: Reset requests over HTTP, not HTTPS.

[ ] Lack of IP/UA Binding
    - Steps:
        1. Request reset link.
        2. Open it from a different device or IP.
    - Look for: Link still works with no binding.

[ ] SMS / Multi-Channel Reset Issues (if applicable)
    - Steps:
        1. If SMS reset exists, try SIM swap or spoofing.
    - Look for: Weakness in secondary channels.

5. ADVANCED / UNCOMMON BUGS
---------------------------
[ ] Password Reset Flooding (DoS)
    - Steps:
        1. Send thousands of reset requests to target email.
    - Look for: Target inbox flooded.

[ ] Host Header Injection
    - Steps:
        1. Modify Host header in forgot password request.
        2. See if link in email reflects this header.
    - Look for: Link manipulation to attacker domain.

[ ] Unicode / IDN Homograph Abuse
    - Steps:
        1. Test Unicode variants of email.
    - Look for: Reset link sent to attacker-controlled domain.

[ ] Deserialization Attack (if token is JWT or serialized object)
    - Steps:
        1. Decode token, look for predictable structure.
        2. Try changing payload and re-signing (or no signature check).
    - Look for: Ability to craft own valid token.

[ ] Log Injection
    - Steps:
        1. Enter payloads with newline, control chars in email.
    - Look for: Malicious entries in logs.

[ ] HTTP Parameter Pollution
    - Steps:
        1. Add duplicate parameters:
            email=victim@example.com&email=attacker@example.com
    - Look for: Wrong account reset.

6. POST-RESET TESTING
---------------------
[ ] Password Complexity Enforcement
    - Steps:
        1. Set "123456" as new password.
    - Look for: Acceptance of weak passwords.

[ ] Old Password Reuse
    - Steps:
        1. Reset password to old one.
    - Look for: No prevention of reuse.

[ ] Session Invalidation
    - Steps:
        1. Login, then reset password from another session.
        2. Check if old session still works.
    - Look for: Sessions not invalidated after reset.

[ ] MFA Bypass
    - Steps:
        1. Reset password on account with MFA.
    - Look for: Login without MFA prompt after reset.

================================================